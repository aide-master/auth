service:
  name: auth

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-domain-manager
  - serverless-offline

provider:
  name: aws
  runtime: nodejs8.10
  environment:
    stage: ${opt:stage, self:provider.stage}
    jwtSecret: ${ssm:/${self:provider.environment.stage}/auth/jwtSecret}
    dbHost: ${ssm:/${self:provider.environment.stage}/auth/dbHost}
    dbUser: ${ssm:/${self:provider.environment.stage}/auth/dbUser}
    dbPassword: ${ssm:/${self:provider.environment.stage}/auth/dbPassword}
    GITHUB_CLIENT_ID: ${ssm:/oauth/github/clientId}
    GITHUB_CLIENT_SECRET: ${ssm:/oauth/github/clientSecret}

functions:
  auth:
    handler: index.handler
  test:
    handler: index.test
    events:
      - http:
          method: get
          path: /test
          authorizer:
            name: auth
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token
  generate:
    handler: index.generate
    events:
      - http:
          method: get
          path: /debug/generate
          request:
            parameters:
              querystrings:
                id: true
                validity: false
  github:
    handler: index.githubAuth
    events:
      - http:
          method: post
          path: /github

custom:
  webpack:
    includeModules:
      forceExclude:
        - aws-sdk
  domains:
    prod: authorize.aidemaster.com
    staging: staging-authorize.aidemaster.com
    dev: dev-authorize.aidemaster.com

  customDomain:
    domainName: ${self:custom.domains.${self:provider.environment.stage}} # Change this to your domain.
    basePath: 'auth' # This will be prefixed to all routes
    stage: ${self:provider.environment.stage}
    createRoute53Record: true
